package ui;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.util.logging.Logger;
import model.User;

   

/**
 *
 * @author Admin
 */
public class MainJFrame extends javax.swing.JFrame {
    private Image photo;
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(MainJFrame.class.getName());
    private String errorTitle;
    public boolean isValidEmail(String email) {
    return email != null && email.contains("@") && email.contains(".");
    
    }

    /**
     * Creates new form java
     */
    public MainJFrame() {
        initComponents();
    maleRadioButton.setActionCommand("Male");
    femaleRadioButton.setActionCommand("Female");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderButtonGroup = new javax.swing.ButtonGroup();
        userProfilePanel = new javax.swing.JPanel();
        userProfileLabel = new javax.swing.JLabel();
        firstNameLabel = new javax.swing.JLabel();
        ageLabel = new javax.swing.JLabel();
        genderLabel = new javax.swing.JLabel();
        firstNameTextField = new javax.swing.JTextField();
        femaleRadioButton = new javax.swing.JRadioButton();
        maleRadioButton = new javax.swing.JRadioButton();
        submitButton = new javax.swing.JButton();
        ageSpinner = new javax.swing.JSpinner();
        phoneLabel = new javax.swing.JLabel();
        phoneFormattedTextField = new javax.swing.JFormattedTextField();
        continentOfOriginLabel = new javax.swing.JLabel();
        continentComboBox = new javax.swing.JComboBox<>();
        hobbiesLabel = new javax.swing.JLabel();
        experienceScrollPane = new javax.swing.JScrollPane();
        hobbiesTextArea = new javax.swing.JTextArea();
        photoLabel = new javax.swing.JLabel();
        photoTextField = new javax.swing.JTextField();
        uploadPhotoButton = new javax.swing.JButton();
        lastNameLabel = new javax.swing.JLabel();
        lastNameTextField = new javax.swing.JTextField();
        emailLabel = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        showPhotoLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        userProfilePanel.setBackground(new java.awt.Color(0, 0, 0));

        userProfileLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        userProfileLabel.setForeground(new java.awt.Color(255, 255, 255));
        userProfileLabel.setText("User Profile");

        firstNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        firstNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        firstNameLabel.setText("First Name:");

        ageLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ageLabel.setForeground(new java.awt.Color(255, 255, 255));
        ageLabel.setText("Age:");

        genderLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        genderLabel.setForeground(new java.awt.Color(255, 255, 255));
        genderLabel.setText("Gender:");

        firstNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameTextFieldActionPerformed(evt);
            }
        });

        genderButtonGroup.add(femaleRadioButton);
        femaleRadioButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        femaleRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        femaleRadioButton.setText("Female");

        genderButtonGroup.add(maleRadioButton);
        maleRadioButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        maleRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        maleRadioButton.setText("Male");
        maleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleRadioButtonActionPerformed(evt);
            }
        });

        submitButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        ageSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 200, 1));

        phoneLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        phoneLabel.setForeground(new java.awt.Color(255, 255, 255));
        phoneLabel.setText("Phone:");

        try {
            phoneFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-###-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        phoneFormattedTextField.setToolTipText("123-456-7890");

        continentOfOriginLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        continentOfOriginLabel.setForeground(new java.awt.Color(255, 255, 255));
        continentOfOriginLabel.setText("Continent of Origin:");

        continentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Africa", "Antarctica", "Asia", "Australia", "Europe", "America", "South America" }));
        continentComboBox.setSelectedIndex(-1);

        hobbiesLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        hobbiesLabel.setForeground(new java.awt.Color(255, 255, 255));
        hobbiesLabel.setText("Hobbies:");

        hobbiesTextArea.setColumns(20);
        hobbiesTextArea.setRows(5);
        experienceScrollPane.setViewportView(hobbiesTextArea);

        photoLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        photoLabel.setForeground(new java.awt.Color(255, 255, 255));
        photoLabel.setText("Photo:");

        photoTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                photoTextFieldActionPerformed(evt);
            }
        });

        uploadPhotoButton.setBackground(new java.awt.Color(255, 153, 102));
        uploadPhotoButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        uploadPhotoButton.setForeground(new java.awt.Color(255, 255, 255));
        uploadPhotoButton.setText("Upload Photo");
        uploadPhotoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadPhotoButtonActionPerformed(evt);
            }
        });

        lastNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lastNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        lastNameLabel.setText("Last Name:");

        lastNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNameTextFieldActionPerformed(evt);
            }
        });

        emailLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        emailLabel.setForeground(new java.awt.Color(255, 255, 255));
        emailLabel.setText("Email:");

        emailTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout userProfilePanelLayout = new javax.swing.GroupLayout(userProfilePanel);
        userProfilePanel.setLayout(userProfilePanelLayout);
        userProfilePanelLayout.setHorizontalGroup(
            userProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userProfilePanelLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(userProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userProfilePanelLayout.createSequentialGroup()
                        .addComponent(genderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(maleRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(femaleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(userProfilePanelLayout.createSequentialGroup()
                        .addGroup(userProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lastNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(firstNameLabel)
                            .addComponent(emailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(userProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lastNameTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                            .addComponent(emailTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstNameTextField)))
                    .addGroup(userProfilePanelLayout.createSequentialGroup()
                        .addGroup(userProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(hobbiesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(photoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(userProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userProfilePanelLayout.createSequentialGroup()
                                .addComponent(photoTextField)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(uploadPhotoButton))
                            .addComponent(experienceScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(userProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, userProfilePanelLayout.createSequentialGroup()
                            .addComponent(continentOfOriginLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(continentComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, userProfilePanelLayout.createSequentialGroup()
                            .addGroup(userProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(phoneLabel))
                            .addGap(36, 36, 36)
                            .addGroup(userProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(phoneFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ageSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(50, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userProfilePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(userProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userProfilePanelLayout.createSequentialGroup()
                        .addComponent(userProfileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(185, 185, 185))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userProfilePanelLayout.createSequentialGroup()
                        .addGroup(userProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(showPhotoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(userProfilePanelLayout.createSequentialGroup()
                                .addComponent(submitButton)
                                .addGap(25, 25, 25)))
                        .addGap(202, 202, 202))))
        );
        userProfilePanelLayout.setVerticalGroup(
            userProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userProfilePanelLayout.createSequentialGroup()
                .addGroup(userProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(userProfilePanelLayout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(firstNameLabel)
                        .addGap(18, 18, 18))
                    .addGroup(userProfilePanelLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(userProfileLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(userProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userProfilePanelLayout.createSequentialGroup()
                        .addComponent(lastNameLabel)
                        .addGap(21, 21, 21)
                        .addComponent(emailLabel)
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userProfilePanelLayout.createSequentialGroup()
                        .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(userProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ageLabel)
                    .addComponent(ageSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(userProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(genderLabel)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(maleRadioButton)
                        .addComponent(femaleRadioButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(userProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneLabel)
                    .addComponent(phoneFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(userProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(continentOfOriginLabel)
                    .addComponent(continentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(userProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hobbiesLabel)
                    .addComponent(experienceScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(userProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(photoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uploadPhotoButton)
                    .addComponent(photoLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(showPhotoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(submitButton)
                .addGap(38, 38, 38))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(userProfilePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(userProfilePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 232, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void firstNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameTextFieldActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        
     try {
              // Declare variables for user inputs
        String firstName;
        String lastName;
        int age;
        String email;
        String phonenumber;
        String gender;
        String hobbies;
        String continent;
    
    // Extract and store user's data from components
        firstName = this.firstNameTextField.getText();
        lastName = this.lastNameTextField.getText();
        age = (int) this.ageSpinner.getModel().getValue();
        email = this.emailTextField.getText();
        gender = this.genderButtonGroup.getSelection().getActionCommand();
        phonenumber = this.phoneFormattedTextField.getText();
        continent = (String)this.continentComboBox.getModel().getSelectedItem();
        hobbies = this.hobbiesTextArea.getText();
        
//        Check name validity
        if(firstName.isBlank()) {
             JOptionPane.showMessageDialog(rootPane, "Invalid first name provided!", "errorTitle", JOptionPane.ERROR_MESSAGE);
             return;
        
        }
             if(lastName.isBlank()){
             JOptionPane.showMessageDialog(rootPane, "Invalid last name provided!", "errorTitle", JOptionPane.ERROR_MESSAGE);
             return;
         
             }
//        Check age validition
        if (age < 18){
        String errorTitle = null;
             JOptionPane.showMessageDialog(rootPane, "Invalid age provided!", errorTitle, JOptionPane.ERROR_MESSAGE);
             return;
        }
        
//        check gender validition
        if (gender.equals("Male")){
              gender = "Male";
           }
           
           if (gender.equals("Female")){
               gender = "Female";
        
           
//               check email validity
        if (email == null || email.isBlank()) {
            JOptionPane.showMessageDialog(rootPane, "Email is required!", "errorTitle", JOptionPane.ERROR_MESSAGE);
            return;
        }

            if (!isValidEmail(email)) {
            JOptionPane.showMessageDialog(rootPane, "Invalid email format!", "errorTitle", JOptionPane.ERROR_MESSAGE);
            return;
        }

//     check phone validity
        if (phonenumber.replace("-", "").isBlank()){
        String errorTitle = null;
        JOptionPane.showMessageDialog(rootPane, "Invalid phone number provided", errorTitle, JOptionPane.ERROR_MESSAGE);
             return;
        
        }
//       check continent validity
             if (continent == null){
             JOptionPane.showMessageDialog(rootPane, "Invalid continent provided", errorTitle, JOptionPane.ERROR_MESSAGE);
             return;
             }
             
//       check hobbies validity
        if (hobbies == null || hobbies.isBlank()) {
        JOptionPane.showMessageDialog(this, "Please enter your hobbies.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
        return; 
        }
             

        if (this.photo == null){
             JOptionPane.showMessageDialog(rootPane, "Photo not provided", errorTitle, JOptionPane.ERROR_MESSAGE);
             return;
             }
        
        //       create a User object
        User user = new User(firstName, lastName, age, gender, phonenumber, email,continent,hobbies, this.photo);

//      Create a success message \\
        JOptionPane.showMessageDialog(rootPane, user, "Success!", JOptionPane.INFORMATION_MESSAGE, new ImageIcon(user.getPhoto()));
        

        System.out.println(firstName + " " + lastName + " " + age + " " + gender);
     
           }
    } catch (NullPointerException e) {
    JOptionPane.showMessageDialog(rootPane, "Some fields are missing", errorTitle, JOptionPane.ERROR_MESSAGE);
    System.out.println("Error: Missing field");
    
} catch (Exception e) {
    JOptionPane.showMessageDialog(rootPane, "Something went wrong", errorTitle, JOptionPane.ERROR_MESSAGE);
    System.out.println("Error: " + e.getMessage());  
}
    }//GEN-LAST:event_submitButtonActionPerformed

    private void uploadPhotoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadPhotoButtonActionPerformed
        // TODO add your handling code here:
      JFileChooser file = new JFileChooser();
        
//        Apply image filter or image file type
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image files", "jpeg", "png", "gif", "jpg");
        file.setFileFilter(filter);
        
        if (file.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
        try {
        BufferedImage img = ImageIO.read(file.getSelectedFile());
        Image edited_image = img.getScaledInstance(100, 120,
        Image.SCALE_SMOOTH);
//        if image is not null
        if (edited_image != null) {
//            set a text path in the phototetfield
        this.photoTextField.setText(file.getSelectedFile().getAbsolutePath());
        this.showPhotoLabel.setIcon(new ImageIcon(edited_image));
        this.photo = edited_image;
        
            }
        } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Please upload image correctly.", "Error - Incorrect image", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
      }
     }
   
    }//GEN-LAST:event_uploadPhotoButtonActionPerformed

    private void photoTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_photoTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_photoTextFieldActionPerformed

    private void lastNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNameTextFieldActionPerformed

    private void emailTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailTextFieldActionPerformed

    private void maleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maleRadioButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new MainJFrame().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ageLabel;
    private javax.swing.JSpinner ageSpinner;
    private javax.swing.JComboBox<String> continentComboBox;
    private javax.swing.JLabel continentOfOriginLabel;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JScrollPane experienceScrollPane;
    private javax.swing.JRadioButton femaleRadioButton;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.ButtonGroup genderButtonGroup;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JLabel hobbiesLabel;
    private javax.swing.JTextArea hobbiesTextArea;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JRadioButton maleRadioButton;
    private javax.swing.JFormattedTextField phoneFormattedTextField;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JLabel photoLabel;
    private javax.swing.JTextField photoTextField;
    private javax.swing.JLabel showPhotoLabel;
    private javax.swing.JButton submitButton;
    private javax.swing.JButton uploadPhotoButton;
    private javax.swing.JLabel userProfileLabel;
    private javax.swing.JPanel userProfilePanel;
    // End of variables declaration//GEN-END:variables

   
 
}